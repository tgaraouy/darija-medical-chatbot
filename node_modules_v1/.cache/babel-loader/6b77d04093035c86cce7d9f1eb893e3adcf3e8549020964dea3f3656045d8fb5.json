{"ast":null,"code":"var _jsxFileName = \"C:\\\\darija-medical-chatbot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Typography, TextField, Button, Paper, List, ListItem, ListItemText, CircularProgress, Alert, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { Send, VolumeUp } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [welcomeMessageSent, setWelcomeMessageSent] = useState(false);\n  const [language, setLanguage] = useState('darija');\n  const [symptoms, setSymptoms] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (!welcomeMessageSent) {\n      addBotMessage(\"Merhba! Ana l'assistant dyalk l'Darija Medical Terms. Kifach n9der n3awnek lyum?\");\n      setWelcomeMessageSent(true);\n    }\n  }, [welcomeMessageSent]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const addBotMessage = (text, terms = null) => {\n    setMessages(prevMessages => [...prevMessages, {\n      text,\n      isBot: true,\n      terms\n    }]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (input.trim() === '') return;\n    setMessages(prevMessages => [...prevMessages, {\n      text: input,\n      isBot: false\n    }]);\n    setInput('');\n    setIsLoading(true);\n    setError(null);\n    try {\n      console.log(`Sending search request for \"${input}\" in ${language}`);\n      const response = await fetch(`${API_URL}/terms/search`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: input,\n          language\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Received response:', data);\n      if (data.terms && data.terms.length > 0) {\n        console.log(`Found ${data.terms.length} terms`);\n        addBotMessage(\"Here's what I found:\", data.terms);\n      } else {\n        console.log('No terms found');\n        addBotMessage(data.message || \"No terms found. Please try a different query.\");\n      }\n    } catch (error) {\n      console.error('Error processing query:', error);\n      setError(error.message);\n      addBotMessage(\"Sorry, there was an error processing your request. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSymptomCheck = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_URL}/terms/symptoms`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          symptoms: symptoms.split(',').map(s => s.trim())\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.conditions && data.conditions.length > 0) {\n        addBotMessage(\"Based on the symptoms, here are some possible conditions:\", data.conditions);\n      } else {\n        addBotMessage(\"No specific conditions found for these symptoms. Please consult a healthcare professional for accurate diagnosis.\");\n      }\n    } catch (error) {\n      console.error('Error processing symptoms:', error);\n      setError(error.message);\n      addBotMessage(\"Sorry, there was an error processing your symptoms. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const speak = (text, lang) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = lang;\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.error('Text-to-speech not supported in this browser');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        my: 2\n      },\n      children: \"Darija Medical Terms Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        height: '60vh',\n        overflow: 'auto',\n        p: 2,\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            justifyContent: message.isBot ? 'flex-start' : 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 1,\n              maxWidth: '70%',\n              bgcolor: message.isBot ? 'grey.100' : 'primary.light'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: message.text,\n              sx: {\n                whiteSpace: 'pre-wrap'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), message.terms && /*#__PURE__*/_jsxDEV(List, {\n              children: message.terms.map((term, termIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 1,\n                  sx: {\n                    p: 1,\n                    width: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: term.darija\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Category: \", term.category_english, \" (\", term.category_darija, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"English: \", term.explanation_english]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mt: 1\n                    },\n                    children: [\"Description (Darija): \", term.detailed_description_darija]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"French: \", term.french]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Spanish: \", term.spanish]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Italian: \", term.italian]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"German: \", term.german]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Dutch: \", term.dutch]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Arabic: \", term.arabic]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      mt: 1\n                    },\n                    children: [\"Contextual Information: \", term.contextual_info]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => speak(term.darija, 'ar-MA'),\n                    size: \"small\",\n                    startIcon: /*#__PURE__*/_jsxDEV(VolumeUp, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 103\n                    }, this),\n                    children: \"Darija\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => speak(term.explanation_english, 'en-US'),\n                    size: \"small\",\n                    startIcon: /*#__PURE__*/_jsxDEV(VolumeUp, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 116\n                    }, this),\n                    children: \"English\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => speak(term.arabic, 'ar'),\n                    size: \"small\",\n                    startIcon: /*#__PURE__*/_jsxDEV(VolumeUp, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 100\n                    }, this),\n                    children: \"Arabic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 25\n                }, this)\n              }, termIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: language,\n        onChange: e => setLanguage(e.target.value),\n        label: \"Language\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"darija\",\n          children: \"Darija\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"english\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"french\",\n          children: \"French\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"arabic\",\n          children: \"Arabic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        display: 'flex',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message here...\",\n        sx: {\n          mr: 1\n        },\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 62\n        }, this),\n        disabled: isLoading,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 24\n        }, this) : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mb: 1\n      },\n      children: \"Symptom Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      value: symptoms,\n      onChange: e => setSymptoms(e.target.value),\n      placeholder: \"Enter symptoms separated by commas\",\n      sx: {\n        mb: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSymptomCheck,\n      variant: \"contained\",\n      disabled: isLoading || !symptoms,\n      children: \"Check Symptoms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rWK6fyz9c92Tt/OlRTz/aT9uuQM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Typography","TextField","Button","Paper","List","ListItem","ListItemText","CircularProgress","Alert","Select","MenuItem","FormControl","InputLabel","Send","VolumeUp","jsxDEV","_jsxDEV","API_URL","App","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","error","setError","welcomeMessageSent","setWelcomeMessageSent","language","setLanguage","symptoms","setSymptoms","messagesEndRef","addBotMessage","scrollToBottom","text","terms","prevMessages","isBot","handleSubmit","e","preventDefault","trim","console","log","response","fetch","method","headers","body","JSON","stringify","query","ok","Error","status","data","json","length","message","handleSymptomCheck","split","map","s","conditions","_messagesEndRef$curre","current","scrollIntoView","behavior","speak","lang","window","utterance","SpeechSynthesisUtterance","speechSynthesis","children","variant","sx","my","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","height","overflow","p","index","justifyContent","elevation","maxWidth","bgcolor","primary","whiteSpace","term","termIndex","width","darija","category_english","category_darija","explanation_english","mt","detailed_description_darija","french","spanish","italian","german","dutch","arabic","contextual_info","onClick","size","startIcon","ref","fullWidth","value","onChange","target","label","onSubmit","style","display","marginBottom","placeholder","mr","disabled","type","_c","$RefreshReg$"],"sources":["C:/darija-medical-chatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  CircularProgress,\n  Alert,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel\n} from '@mui/material';\nimport { Send, VolumeUp } from '@mui/icons-material';\n\nconst API_URL = 'http://localhost:5000/api';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [welcomeMessageSent, setWelcomeMessageSent] = useState(false);\n  const [language, setLanguage] = useState('darija');\n  const [symptoms, setSymptoms] = useState('');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    if (!welcomeMessageSent) {\n      addBotMessage(\"Merhba! Ana l'assistant dyalk l'Darija Medical Terms. Kifach n9der n3awnek lyum?\");\n      setWelcomeMessageSent(true);\n    }\n  }, [welcomeMessageSent]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const addBotMessage = (text, terms = null) => {\n    setMessages(prevMessages => [...prevMessages, { text, isBot: true, terms }]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (input.trim() === '') return;\n    setMessages(prevMessages => [...prevMessages, { text: input, isBot: false }]);\n    setInput('');\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      console.log(`Sending search request for \"${input}\" in ${language}`);\n      const response = await fetch(`${API_URL}/terms/search`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query: input, language }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('Received response:', data);\n\n      if (data.terms && data.terms.length > 0) {\n        console.log(`Found ${data.terms.length} terms`);\n        addBotMessage(\"Here's what I found:\", data.terms);\n      } else {\n        console.log('No terms found');\n        addBotMessage(data.message || \"No terms found. Please try a different query.\");\n      }\n    } catch (error) {\n      console.error('Error processing query:', error);\n      setError(error.message);\n      addBotMessage(\"Sorry, there was an error processing your request. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSymptomCheck = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(`${API_URL}/terms/symptoms`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ symptoms: symptoms.split(',').map(s => s.trim()) }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (data.conditions && data.conditions.length > 0) {\n        addBotMessage(\"Based on the symptoms, here are some possible conditions:\", data.conditions);\n      } else {\n        addBotMessage(\"No specific conditions found for these symptoms. Please consult a healthcare professional for accurate diagnosis.\");\n      }\n    } catch (error) {\n      console.error('Error processing symptoms:', error);\n      setError(error.message);\n      addBotMessage(\"Sorry, there was an error processing your symptoms. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const speak = (text, lang) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = lang;\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.error('Text-to-speech not supported in this browser');\n    }\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" sx={{ my: 2 }}>\n        Darija Medical Terms Chatbot\n      </Typography>\n\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n\n      <Paper sx={{ height: '60vh', overflow: 'auto', p: 2, mb: 2 }}>\n        <List>\n          {messages.map((message, index) => (\n            <ListItem key={index} sx={{ justifyContent: message.isBot ? 'flex-start' : 'flex-end' }}>\n              <Paper elevation={3} sx={{ p: 1, maxWidth: '70%', bgcolor: message.isBot ? 'grey.100' : 'primary.light' }}>\n                <ListItemText primary={message.text} sx={{ whiteSpace: 'pre-wrap' }} />\n                {message.terms && (\n                  <List>\n                    {message.terms.map((term, termIndex) => (\n                      <ListItem key={termIndex}>\n                        <Paper elevation={1} sx={{ p: 1, width: '100%' }}>\n                          <Typography variant=\"h6\">{term.darija}</Typography>\n                          <Typography variant=\"body2\">Category: {term.category_english} ({term.category_darija})</Typography>\n                          <Typography variant=\"body2\">English: {term.explanation_english}</Typography>\n                          <Typography variant=\"body2\" sx={{ mt: 1 }}>Description (Darija): {term.detailed_description_darija}</Typography>\n                          <Typography variant=\"body2\">French: {term.french}</Typography>\n                          <Typography variant=\"body2\">Spanish: {term.spanish}</Typography>\n                          <Typography variant=\"body2\">Italian: {term.italian}</Typography>\n                          <Typography variant=\"body2\">German: {term.german}</Typography>\n                          <Typography variant=\"body2\">Dutch: {term.dutch}</Typography>\n                          <Typography variant=\"body2\">Arabic: {term.arabic}</Typography>\n                          <Typography variant=\"body2\" sx={{ mt: 1 }}>Contextual Information: {term.contextual_info}</Typography>\n                          <Button onClick={() => speak(term.darija, 'ar-MA')} size=\"small\" startIcon={<VolumeUp />}>\n                            Darija\n                          </Button>\n                          <Button onClick={() => speak(term.explanation_english, 'en-US')} size=\"small\" startIcon={<VolumeUp />}>\n                            English\n                          </Button>\n                          <Button onClick={() => speak(term.arabic, 'ar')} size=\"small\" startIcon={<VolumeUp />}>\n                            Arabic\n                          </Button>\n                        </Paper>\n                      </ListItem>\n                    ))}\n                  </List>\n                )}\n              </Paper>\n            </ListItem>\n          ))}\n          <div ref={messagesEndRef} />\n        </List>\n      </Paper>\n\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <InputLabel>Language</InputLabel>\n        <Select\n          value={language}\n          onChange={(e) => setLanguage(e.target.value)}\n          label=\"Language\"\n        >\n          <MenuItem value=\"darija\">Darija</MenuItem>\n          <MenuItem value=\"english\">English</MenuItem>\n          <MenuItem value=\"french\">French</MenuItem>\n          <MenuItem value=\"arabic\">Arabic</MenuItem>\n        </Select>\n      </FormControl>\n\n      <form onSubmit={handleSubmit} style={{ display: 'flex', marginBottom: '20px' }}>\n        <TextField\n          fullWidth\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message here...\"\n          sx={{ mr: 1 }}\n          disabled={isLoading}\n        />\n        <Button type=\"submit\" variant=\"contained\" startIcon={<Send />} disabled={isLoading}>\n          {isLoading ? <CircularProgress size={24} /> : 'Send'}\n        </Button>\n      </form>\n\n      <Typography variant=\"h6\" sx={{ mb: 1 }}>\n        Symptom Checker\n      </Typography>\n      <TextField\n        fullWidth\n        value={symptoms}\n        onChange={(e) => setSymptoms(e.target.value)}\n        placeholder=\"Enter symptoms separated by commas\"\n        sx={{ mb: 1 }}\n      />\n      <Button onClick={handleSymptomCheck} variant=\"contained\" disabled={isLoading || !symptoms}>\n        Check Symptoms\n      </Button>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SACEC,SAAS,EACTC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,gBAAgB,EAChBC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,WAAW,EACXC,UAAU,QACL,eAAe;AACtB,SAASC,IAAI,EAAEC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACkC,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAC,QAAQ,CAAC;EAClD,MAAM,CAACoC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMsC,cAAc,GAAGpC,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd,IAAI,CAAC+B,kBAAkB,EAAE;MACvBO,aAAa,CAAC,kFAAkF,CAAC;MACjGN,qBAAqB,CAAC,IAAI,CAAC;IAC7B;EACF,CAAC,EAAE,CAACD,kBAAkB,CAAC,CAAC;EAExB/B,SAAS,CAAC,MAAM;IACduC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAEd,MAAMe,aAAa,GAAGA,CAACE,IAAI,EAAEC,KAAK,GAAG,IAAI,KAAK;IAC5CjB,WAAW,CAACkB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAE;MAAEF,IAAI;MAAEG,KAAK,EAAE,IAAI;MAAEF;IAAM,CAAC,CAAC,CAAC;EAC9E,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIrB,KAAK,CAACsB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACzBvB,WAAW,CAACkB,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAE;MAAEF,IAAI,EAAEf,KAAK;MAAEkB,KAAK,EAAE;IAAM,CAAC,CAAC,CAAC;IAC7EjB,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFkB,OAAO,CAACC,GAAG,CAAC,+BAA+BxB,KAAK,QAAQQ,QAAQ,EAAE,CAAC;MACnE,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG/B,OAAO,eAAe,EAAE;QACtDgC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAEhC,KAAK;UAAEQ;QAAS,CAAC;MACjD,CAAC,CAAC;MAEF,IAAI,CAACiB,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBT,QAAQ,CAACU,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCd,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEY,IAAI,CAAC;MAEvC,IAAIA,IAAI,CAACpB,KAAK,IAAIoB,IAAI,CAACpB,KAAK,CAACsB,MAAM,GAAG,CAAC,EAAE;QACvCf,OAAO,CAACC,GAAG,CAAC,SAASY,IAAI,CAACpB,KAAK,CAACsB,MAAM,QAAQ,CAAC;QAC/CzB,aAAa,CAAC,sBAAsB,EAAEuB,IAAI,CAACpB,KAAK,CAAC;MACnD,CAAC,MAAM;QACLO,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7BX,aAAa,CAACuB,IAAI,CAACG,OAAO,IAAI,+CAA+C,CAAC;MAChF;IACF,CAAC,CAAC,OAAOnC,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAACD,KAAK,CAACmC,OAAO,CAAC;MACvB1B,aAAa,CAAC,4EAA4E,CAAC;IAC7F,CAAC,SAAS;MACRV,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMqC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrCrC,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMoB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG/B,OAAO,iBAAiB,EAAE;QACxDgC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAErB,QAAQ,EAAEA,QAAQ,CAAC+B,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACrB,IAAI,CAAC,CAAC;QAAE,CAAC;MAC3E,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBT,QAAQ,CAACU,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACQ,UAAU,IAAIR,IAAI,CAACQ,UAAU,CAACN,MAAM,GAAG,CAAC,EAAE;QACjDzB,aAAa,CAAC,2DAA2D,EAAEuB,IAAI,CAACQ,UAAU,CAAC;MAC7F,CAAC,MAAM;QACL/B,aAAa,CAAC,mHAAmH,CAAC;MACpI;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAACD,KAAK,CAACmC,OAAO,CAAC;MACvB1B,aAAa,CAAC,6EAA6E,CAAC;IAC9F,CAAC,SAAS;MACRV,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAA+B,qBAAA;IAC3B,CAAAA,qBAAA,GAAAjC,cAAc,CAACkC,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,KAAK,GAAGA,CAAClC,IAAI,EAAEmC,IAAI,KAAK;IAC5B,IAAI,iBAAiB,IAAIC,MAAM,EAAE;MAC/B,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACtC,IAAI,CAAC;MACpDqC,SAAS,CAACF,IAAI,GAAGA,IAAI;MACrBC,MAAM,CAACG,eAAe,CAACL,KAAK,CAACG,SAAS,CAAC;IACzC,CAAC,MAAM;MACL7B,OAAO,CAACnB,KAAK,CAAC,8CAA8C,CAAC;IAC/D;EACF,CAAC;EAED,oBACEV,OAAA,CAACjB,SAAS;IAAA8E,QAAA,gBACR7D,OAAA,CAAChB,UAAU;MAAC8E,OAAO,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,EAAC;IAExC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EAEZ1D,KAAK,iBAAIV,OAAA,CAACR,KAAK;MAAC6E,QAAQ,EAAC,OAAO;MAACN,EAAE,EAAE;QAAEO,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,EAAEnD;IAAK;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEhEpE,OAAA,CAACb,KAAK;MAAC4E,EAAE,EAAE;QAAEQ,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE,MAAM;QAAEC,CAAC,EAAE,CAAC;QAAEH,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,eAC3D7D,OAAA,CAACZ,IAAI;QAAAyE,QAAA,GACFzD,QAAQ,CAAC4C,GAAG,CAAC,CAACH,OAAO,EAAE6B,KAAK,kBAC3B1E,OAAA,CAACX,QAAQ;UAAa0E,EAAE,EAAE;YAAEY,cAAc,EAAE9B,OAAO,CAACrB,KAAK,GAAG,YAAY,GAAG;UAAW,CAAE;UAAAqC,QAAA,eACtF7D,OAAA,CAACb,KAAK;YAACyF,SAAS,EAAE,CAAE;YAACb,EAAE,EAAE;cAAEU,CAAC,EAAE,CAAC;cAAEI,QAAQ,EAAE,KAAK;cAAEC,OAAO,EAAEjC,OAAO,CAACrB,KAAK,GAAG,UAAU,GAAG;YAAgB,CAAE;YAAAqC,QAAA,gBACxG7D,OAAA,CAACV,YAAY;cAACyF,OAAO,EAAElC,OAAO,CAACxB,IAAK;cAAC0C,EAAE,EAAE;gBAAEiB,UAAU,EAAE;cAAW;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACtEvB,OAAO,CAACvB,KAAK,iBACZtB,OAAA,CAACZ,IAAI;cAAAyE,QAAA,EACFhB,OAAO,CAACvB,KAAK,CAAC0B,GAAG,CAAC,CAACiC,IAAI,EAAEC,SAAS,kBACjClF,OAAA,CAACX,QAAQ;gBAAAwE,QAAA,eACP7D,OAAA,CAACb,KAAK;kBAACyF,SAAS,EAAE,CAAE;kBAACb,EAAE,EAAE;oBAAEU,CAAC,EAAE,CAAC;oBAAEU,KAAK,EAAE;kBAAO,CAAE;kBAAAtB,QAAA,gBAC/C7D,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,IAAI;oBAAAD,QAAA,EAAEoB,IAAI,CAACG;kBAAM;oBAAAnB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eACnDpE,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,OAAO;oBAAAD,QAAA,GAAC,YAAU,EAACoB,IAAI,CAACI,gBAAgB,EAAC,IAAE,EAACJ,IAAI,CAACK,eAAe,EAAC,GAAC;kBAAA;oBAAArB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACnGpE,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,OAAO;oBAAAD,QAAA,GAAC,WAAS,EAACoB,IAAI,CAACM,mBAAmB;kBAAA;oBAAAtB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eAC5EpE,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,OAAO;oBAACC,EAAE,EAAE;sBAAEyB,EAAE,EAAE;oBAAE,CAAE;oBAAA3B,QAAA,GAAC,wBAAsB,EAACoB,IAAI,CAACQ,2BAA2B;kBAAA;oBAAAxB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eAChHpE,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,OAAO;oBAAAD,QAAA,GAAC,UAAQ,EAACoB,IAAI,CAACS,MAAM;kBAAA;oBAAAzB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eAC9DpE,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,OAAO;oBAAAD,QAAA,GAAC,WAAS,EAACoB,IAAI,CAACU,OAAO;kBAAA;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eAChEpE,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,OAAO;oBAAAD,QAAA,GAAC,WAAS,EAACoB,IAAI,CAACW,OAAO;kBAAA;oBAAA3B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eAChEpE,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,OAAO;oBAAAD,QAAA,GAAC,UAAQ,EAACoB,IAAI,CAACY,MAAM;kBAAA;oBAAA5B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eAC9DpE,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,OAAO;oBAAAD,QAAA,GAAC,SAAO,EAACoB,IAAI,CAACa,KAAK;kBAAA;oBAAA7B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eAC5DpE,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,OAAO;oBAAAD,QAAA,GAAC,UAAQ,EAACoB,IAAI,CAACc,MAAM;kBAAA;oBAAA9B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eAC9DpE,OAAA,CAAChB,UAAU;oBAAC8E,OAAO,EAAC,OAAO;oBAACC,EAAE,EAAE;sBAAEyB,EAAE,EAAE;oBAAE,CAAE;oBAAA3B,QAAA,GAAC,0BAAwB,EAACoB,IAAI,CAACe,eAAe;kBAAA;oBAAA/B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eACtGpE,OAAA,CAACd,MAAM;oBAAC+G,OAAO,EAAEA,CAAA,KAAM1C,KAAK,CAAC0B,IAAI,CAACG,MAAM,EAAE,OAAO,CAAE;oBAACc,IAAI,EAAC,OAAO;oBAACC,SAAS,eAAEnG,OAAA,CAACF,QAAQ;sBAAAmE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAE;oBAAAP,QAAA,EAAC;kBAE1F;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTpE,OAAA,CAACd,MAAM;oBAAC+G,OAAO,EAAEA,CAAA,KAAM1C,KAAK,CAAC0B,IAAI,CAACM,mBAAmB,EAAE,OAAO,CAAE;oBAACW,IAAI,EAAC,OAAO;oBAACC,SAAS,eAAEnG,OAAA,CAACF,QAAQ;sBAAAmE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAE;oBAAAP,QAAA,EAAC;kBAEvG;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTpE,OAAA,CAACd,MAAM;oBAAC+G,OAAO,EAAEA,CAAA,KAAM1C,KAAK,CAAC0B,IAAI,CAACc,MAAM,EAAE,IAAI,CAAE;oBAACG,IAAI,EAAC,OAAO;oBAACC,SAAS,eAAEnG,OAAA,CAACF,QAAQ;sBAAAmE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAE;oBAAAP,QAAA,EAAC;kBAEvF;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC,GAtBKc,SAAS;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAuBd,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CACP;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC,GAjCKM,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkCV,CACX,CAAC,eACFpE,OAAA;UAAKoG,GAAG,EAAElF;QAAe;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAERpE,OAAA,CAACL,WAAW;MAAC0G,SAAS;MAACtC,EAAE,EAAE;QAAEO,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,gBACnC7D,OAAA,CAACJ,UAAU;QAAAiE,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACjCpE,OAAA,CAACP,MAAM;QACL6G,KAAK,EAAExF,QAAS;QAChByF,QAAQ,EAAG7E,CAAC,IAAKX,WAAW,CAACW,CAAC,CAAC8E,MAAM,CAACF,KAAK,CAAE;QAC7CG,KAAK,EAAC,UAAU;QAAA5C,QAAA,gBAEhB7D,OAAA,CAACN,QAAQ;UAAC4G,KAAK,EAAC,QAAQ;UAAAzC,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eAC1CpE,OAAA,CAACN,QAAQ;UAAC4G,KAAK,EAAC,SAAS;UAAAzC,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eAC5CpE,OAAA,CAACN,QAAQ;UAAC4G,KAAK,EAAC,QAAQ;UAAAzC,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eAC1CpE,OAAA,CAACN,QAAQ;UAAC4G,KAAK,EAAC,QAAQ;UAAAzC,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEdpE,OAAA;MAAM0G,QAAQ,EAAEjF,YAAa;MAACkF,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAhD,QAAA,gBAC7E7D,OAAA,CAACf,SAAS;QACRoH,SAAS;QACTC,KAAK,EAAEhG,KAAM;QACbiG,QAAQ,EAAG7E,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAAC8E,MAAM,CAACF,KAAK,CAAE;QAC1CQ,WAAW,EAAC,2BAA2B;QACvC/C,EAAE,EAAE;UAAEgD,EAAE,EAAE;QAAE,CAAE;QACdC,QAAQ,EAAExG;MAAU;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFpE,OAAA,CAACd,MAAM;QAAC+H,IAAI,EAAC,QAAQ;QAACnD,OAAO,EAAC,WAAW;QAACqC,SAAS,eAAEnG,OAAA,CAACH,IAAI;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAAC4C,QAAQ,EAAExG,SAAU;QAAAqD,QAAA,EAChFrD,SAAS,gBAAGR,OAAA,CAACT,gBAAgB;UAAC2G,IAAI,EAAE;QAAG;UAAAjC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAAG;MAAM;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEPpE,OAAA,CAAChB,UAAU;MAAC8E,OAAO,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEO,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,EAAC;IAExC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbpE,OAAA,CAACf,SAAS;MACRoH,SAAS;MACTC,KAAK,EAAEtF,QAAS;MAChBuF,QAAQ,EAAG7E,CAAC,IAAKT,WAAW,CAACS,CAAC,CAAC8E,MAAM,CAACF,KAAK,CAAE;MAC7CQ,WAAW,EAAC,oCAAoC;MAChD/C,EAAE,EAAE;QAAEO,EAAE,EAAE;MAAE;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACFpE,OAAA,CAACd,MAAM;MAAC+G,OAAO,EAAEnD,kBAAmB;MAACgB,OAAO,EAAC,WAAW;MAACkD,QAAQ,EAAExG,SAAS,IAAI,CAACQ,QAAS;MAAA6C,QAAA,EAAC;IAE3F;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB;AAACjE,EAAA,CA/MQD,GAAG;AAAAgH,EAAA,GAAHhH,GAAG;AAiNZ,eAAeA,GAAG;AAAC,IAAAgH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}